{
  "openapi": "3.0.0",
  "info": {
    "title": "Node-Typescript API",
    "version": "1.0.0",
    "description": "A sample API"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "paths": {
    "/auth/signup/": {
      "post": {
        "description": "sign up user to application",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "description": "sign up body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSchema"
              },
              "example": {
                "email": "test.user@mail.com",
                "password": "test_test"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "user successfuly signed in",
            "content": {
              "appication/json": {
                "example": {
                  "status": 200,
                  "logged": true,
                  "message": "Sign in successfull!!"
                }
              }
            }
          },
          "400": {
            "description": "sign in failed",
            "content": {
              "application/json": {
                "example": {
                  "status": 400,
                  "logged": false,
                  "message": "Email already exists"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login/": {
      "post": {
        "description": "Login user to application",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "description": "login body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSchema"
              },
              "example": {
                "email": "test.user@mail.com",
                "password": "test_test"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "user successfuly logged",
            "content": {
              "appication/json": {
                "example": {
                  "status": 200,
                  "logged": true,
                  "message": "Successfully logged!"
                }
              }
            }
          },
          "401": {
            "description": "Not logged, invalid credentials",
            "content": {
              "application/json": {
                "example": {
                  "status": 401,
                  "logged": false,
                  "message": "Invalid credentials"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout/": {
      "post": {
        "description": "Loogout from application",
        "tags": [
          "auth"
        ],
        "responses": {
          "200": {
            "description": "users successfuly logout",
            "content": {
              "application/json": {
                "example": {
                  "status": 200,
                  "logged": false,
                  "message": "Successfuly logged out"
                }
              }
            }
          },
          "401": {
            "description": "cant logout user, because he didnt login to app",
            "content": {
              "application/json": {
                "example": {
                  "status": 401,
                  "logged": false,
                  "message": "You are not authorized to app. Can't logout"
                }
              }
            }
          }
        }
      }
    },
    "/v1/Blogs": {
      "get": {
        "description": "Get all stored Blogs in Database",
        "tags": [
          "Blogs"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Blogs",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Blogs"
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Create new Blog",
        "tags": [
          "Blogs"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "requestBody": {
          "description": "Blog creation request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlogSchema"
              },
              "example": {
                "name": "BlogName",
                "email": "test.Blog@mail.com"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "return created Blog",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/BlogSchema"
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/Blogs/{id}": {
      "get": {
        "description": "Get Blog by BlogId",
        "tags": [
          "Blogs"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "the unique BlogId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "return Blog by id",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/BlogSchema"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete Blog by BlogId",
        "tags": [
          "Blogs"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "the unique BlogId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "return deleted Blog",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/BlogSchema"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/Classifications": {
      "get": {
        "description": "Get all stored Classifications in Database",
        "tags": [
          "Classifications"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Classifications",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Classifications"
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Create new Classification",
        "tags": [
          "Classifications"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "requestBody": {
          "description": "Classification creation request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClassificationSchema"
              },
              "example": {
                "name": "ClassificationName",
                "email": "test.Classification@mail.com"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "return created Classification",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ClassificationSchema"
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/Classifications/{id}": {
      "get": {
        "description": "Get Classification by ClassificationId",
        "tags": [
          "Classifications"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "the unique ClassificationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "return Classification by id",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ClassificationSchema"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete Classification by ClassificationId",
        "tags": [
          "Classifications"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "the unique ClassificationId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "return deleted Classification",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ClassificationSchema"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/Comments": {
      "get": {
        "description": "Get all stored Comments in Database",
        "tags": [
          "Comments"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Comments",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Comments"
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Create new Comment",
        "tags": [
          "Comments"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "requestBody": {
          "description": "Comment creation request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommentSchema"
              },
              "example": {
                "name": "CommentName",
                "email": "test.Comment@mail.com"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "return created Comment",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/CommentSchema"
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/Comments/{id}": {
      "get": {
        "description": "Get Comment by CommentId",
        "tags": [
          "Comments"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "the unique CommentId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "return Comment by id",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/CommentSchema"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete Comment by CommentId",
        "tags": [
          "Comments"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "the unique CommentId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "return deleted Comment",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/CommentSchema"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/Movies": {
      "get": {
        "description": "Get all stored Movies in Database",
        "tags": [
          "Movies"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of Movies",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Movies"
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Create new Movie",
        "tags": [
          "Movies"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "requestBody": {
          "description": "Movie creation request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MovieSchema"
              },
              "example": {
                "name": "MovieName",
                "email": "test.Movie@mail.com"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "return created Movie",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/MovieSchema"
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/Movies/{id}": {
      "get": {
        "description": "Get Movie by MovieId",
        "tags": [
          "Movies"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "the unique MovieId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "return Movie by id",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/MovieSchema"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete Movie by MovieId",
        "tags": [
          "Movies"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "the unique MovieId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "return deleted Movie",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/MovieSchema"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/users": {
      "get": {
        "description": "Get all stored users in Database",
        "tags": [
          "users"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "An array of users",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Users"
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Create new User",
        "tags": [
          "users"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "requestBody": {
          "description": "user creation request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSchema"
              },
              "example": {
                "name": "userName",
                "email": "test.user@mail.com"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "return created user",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/UserSchema"
                    }
                  ]
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/users/{id}": {
      "get": {
        "description": "Get user by userId",
        "tags": [
          "users"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "the unique userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "return user by id",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/UserSchema"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete user by userId",
        "tags": [
          "users"
        ],
        "security": [
          {
            "cookieAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "the unique userId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "return deleted user",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/UserSchema"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserSchema": {
        "required": [
          "email",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "passwordResetToken": {
            "type": "string"
          },
          "passwordResetExpires": {
            "type": "string",
            "format": "date"
          },
          "tokens": {
            "type": "array"
          }
        }
      },
      "Users": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/UserSchema"
        }
      },
      "Error": {
        "type": "object",
        "required": [
          "status",
          "message"
        ],
        "properties": {
          "status": {
            "type": "integer",
            "description": "HTTP status code",
            "example": 200
          },
          "message": {
            "type": "string",
            "description": "Error description",
            "example": "User created"
          }
        }
      }
    },
    "securitySchemes": {
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "sid"
      }
    }
  },
  "tags": []
}